class Solution {
    // Merge two sorted linked lists into a single sorted linked list.
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        // Create a dummy node to simplify the code.
        ListNode dummyNode = new ListNode(0);
        // Initialize a tail pointer to build the merged list.
        ListNode tail = dummyNode;
        
        while (true) {
            // If either of the input lists is null, append the non-null list to the merged list.
            if (list1 == null) {
                tail.next = list2;
                break;
            }
            if (list2 == null) {
                tail.next = list1;
                break;
            }
            
            // Compare the values of the current nodes in both lists and append the smaller one to the merged list.
            if (list1.val <= list2.val) {
                tail.next = list1;
                list1 = list1.next;
            } else {
                tail.next = list2;
                list2 = list2.next;
            }
            
            // Move the tail pointer to the last node in the merged list.
            tail = tail.next;
        }
        
        // Return the merged list starting from the node after the dummy node.
        return dummyNode.next;
    }
}
